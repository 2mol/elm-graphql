-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Starwars.Object.Droid exposing (appearsIn, avatarUrl, friends, id, name, primaryFunction, selection)

import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Starwars.Enum.Episode
import Starwars.InputObject
import Starwars.Interface
import Starwars.Object
import Starwars.Scalar
import Starwars.Union


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Starwars.Object.Droid
selection constructor =
    Object.selection constructor


{-| Which movies they appear in.
-}
appearsIn : Field (List Starwars.Enum.Episode.Episode) Starwars.Object.Droid
appearsIn =
    Object.fieldDecoder "appearsIn" [] (Starwars.Enum.Episode.decoder |> Decode.list)


{-| Url to a profile picture for the character.
-}
avatarUrl : Field String Starwars.Object.Droid
avatarUrl =
    Object.fieldDecoder "avatarUrl" [] Decode.string


{-| The friends of the droid, or an empty list if they have none.
-}
friends : SelectionSet decodesTo Starwars.Interface.Character -> Field (List decodesTo) Starwars.Object.Droid
friends object_ =
    Object.selectionField "friends" [] object_ (identity >> Decode.list)


{-| The ID of the droid.
-}
id : Field Starwars.Scalar.Id Starwars.Object.Droid
id =
    Object.fieldDecoder "id" [] (Object.scalarDecoder |> Decode.map Starwars.Scalar.Id)


{-| The name of the droid.
-}
name : Field String Starwars.Object.Droid
name =
    Object.fieldDecoder "name" [] Decode.string


{-| The primary function of the droid.
-}
primaryFunction : Field (Maybe String) Starwars.Object.Droid
primaryFunction =
    Object.fieldDecoder "primaryFunction" [] (Decode.string |> Decode.nullable)
