-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Starwars.Object.Human exposing (appearsIn, avatarUrl, friends, homePlanet, id, name, selection)

import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Starwars.Enum.Episode
import Starwars.InputObject
import Starwars.Interface
import Starwars.Object
import Starwars.Scalar
import Starwars.Union


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Starwars.Object.Human
selection constructor =
    Object.selection constructor


{-| Which movies they appear in.
-}
appearsIn : Field (List Starwars.Enum.Episode.Episode) Starwars.Object.Human
appearsIn =
    Object.fieldDecoder "appearsIn" [] (Starwars.Enum.Episode.decoder |> Decode.list)


{-| Url to a profile picture for the character.
-}
avatarUrl : Field String Starwars.Object.Human
avatarUrl =
    Object.fieldDecoder "avatarUrl" [] Decode.string


{-| The friends of the human, or an empty list if they have none.
-}
friends : SelectionSet decodesTo Starwars.Interface.Character -> Field (List decodesTo) Starwars.Object.Human
friends object_ =
    Object.selectionField "friends" [] object_ (identity >> Decode.list)


{-| The home planet of the human, or null if unknown.
-}
homePlanet : Field (Maybe String) Starwars.Object.Human
homePlanet =
    Object.fieldDecoder "homePlanet" [] (Decode.string |> Decode.nullable)


{-| The ID of the human.
-}
id : Field Starwars.Scalar.Id Starwars.Object.Human
id =
    Object.fieldDecoder "id" [] (Object.scalarDecoder |> Decode.map Starwars.Scalar.Id)


{-| The name of the human.
-}
name : Field String Starwars.Object.Human
name =
    Object.fieldDecoder "name" [] Decode.string
