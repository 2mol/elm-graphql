-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Normalize.Object.Droid exposing (appearsIn, friends, id, name, primaryFunction)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Normalize.Enum.Episode_
import Normalize.InputObject
import Normalize.Interface
import Normalize.Object
import Normalize.Scalar
import Normalize.ScalarDecoders
import Normalize.Union


{-| Which movies they appear in.
-}
appearsIn : SelectionSet (List Normalize.Enum.Episode_.Episode_) Normalize.Object.Droid
appearsIn =
    Object.selectionForField "(List Enum.Episode_.Episode_)" "appearsIn" [] (Normalize.Enum.Episode_.decoder |> Decode.list)


{-| The friends of the droid, or an empty list if they have none.
-}
friends : SelectionSet decodesTo Normalize.Interface.Character -> SelectionSet (List decodesTo) Normalize.Object.Droid
friends object_ =
    Object.selectionForCompositeField "friends" [] object_ (identity >> Decode.list)


{-| The ID of the droid.
-}
id : SelectionSet Normalize.ScalarDecoders.Id Normalize.Object.Droid
id =
    Object.selectionForField "ScalarDecoders.Id" "id" [] (Normalize.ScalarDecoders.codecs |> Normalize.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| The name of the droid.
-}
name : SelectionSet String Normalize.Object.Droid
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| The primary function of the droid.
-}
primaryFunction : SelectionSet (Maybe String) Normalize.Object.Droid
primaryFunction =
    Object.selectionForField "(Maybe String)" "primaryFunction" [] (Decode.string |> Decode.nullable)
